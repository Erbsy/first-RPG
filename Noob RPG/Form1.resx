<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS41ZEdYUgAAAKRJREFUSEvtjkEO
        wyAMBHky4kF8NdVi05iyQWByiJSONIcGe9zw5/EcA7cpoZwztb5j0MMwbq2z6hTTcWvdUy9xxX/VDoUu
        rIqO2lA+soXq1Tv7rr2GbmhH9CR7Qge9oifZEzroES214UgpFdnSrOhIrud7YOcQOpLrKY8xRvchzGpn
        SB3qDkEWhmZvCXoE2jh+Y1ZW1rH/jh4y77dgg7eGX0kIH5hHgbnRPow6AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>